openapi: 3.0.1
info:
  title: Device Service API
  version: "1.0"
paths:
  /api/devices:
    post:
      summary: Create a device
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
      responses:
        '201':
          description: Device created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
    get:
      summary: Get all devices
      responses:
        '200':
          description: List of devices
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
  /api/devices/{id}:
    get:
      summary: Get device by id
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        '200':
          description: Device found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        '404':
          description: Not found
          content:
            application/json:
              schema: { type: object, properties: { error: { type: string } } }
    put:
      summary: Update device
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
      responses:
        '200':
          description: Updated
    delete:
      summary: Delete device
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        '200':
          description: Deleted
        '403':
          description: Not found or no permission
  /api/devices/{id}/availability:
    get:
      summary: Get device availability
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        '200':
          description: Availability info
          content:
            application/json:
              schema:
                type: object
                properties:
                  available: { type: boolean }
    patch:
      summary: Update device availability
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                available:
                  type: boolean
      responses:
        '200':
          description: Availability updated
  /api/categories:
    get:
      summary: Get all categories
      responses:
        '200':
          description: List of categories
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/cities:
    get:
      summary: Get all cities
      responses:
        '200':
          description: List of cities
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/regions:
    get:
      summary: Get all regions
      responses:
        '200':
          description: List of regions
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/devices/trending:
    get:
      summary: Get trending devices
      parameters:
        - name: limit
          in: query
          required: false
          schema: { type: integer, default: 10 }
      responses:
        '200':
          description: List of trending devices
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
  /api/devices/{id}/favorite:
    post:
      summary: Add device to favorites
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        '204':
          description: Added to favorites
        '401':
          description: Not authenticated
    delete:
      summary: Remove device from favorites
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        '204':
          description: Removed from favorites
        '404':
          description: Not found
  /api/devices/favorite:
    get:
      summary: Get user favorite devices
      responses:
        '200':
          description: List of favorites
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
  /api/upload-url:
    get:
      summary: Get presigned upload URL for device image
      parameters:
        - name: fileName
          in: query
          required: true
          schema: { type: string }
      responses:
        '200':
          description: Upload URL response
          content:
            application/json:
              schema:
                type: object
                properties:
                  uploadUrl: { type: string }
                  publicUrl: { type: string }

components:
  schemas:
    Device:
      type: object
      properties:
        id: { type: string }
        name: { type: string }
        description: { type: string }
        category: { type: string }
        price_per_day: { type: number }
        available: { type: boolean }
        image_url: { type: string }
        owner_id: { type: string }
        city: { type: string }
        region: { type: string }
        created_at: { type: string }
        updated_at: { type: string }
