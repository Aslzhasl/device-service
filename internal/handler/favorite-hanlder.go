// internal/handler/favorite_handler.go

package handler

import (
	"log"
	"net/http"

	"device-service/internal/middleware"
	"device-service/internal/repository"

	"github.com/gin-gonic/gin"
)

// RegisterFavoriteRoutes —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∏–∑–±—Ä–∞–Ω–Ω—ã–º (favorites).
func RegisterFavoriteRoutes(r *gin.RouterGroup, favRepo *repository.FavoriteRepository) {
	// 1) –î–æ–±–∞–≤–∏—Ç—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ: POST /api/devices/:id/favorite
	r.POST("/devices/:id/favorite", func(c *gin.Context) {
		// –ò–∑–≤–ª–µ–∫–∞–µ–º userID –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ (JWT)
		userID, ok := middleware.GetUserID(c)
		if !ok {
			c.JSON(http.StatusUnauthorized, gin.H{"error": "user not authenticated"})
			return
		}
		deviceID := c.Param("id")

		log.Printf("‚ûï AddFavorite called by user=%s for device=%s", userID, deviceID)

		if err := favRepo.AddFavorite(c.Request.Context(), userID, deviceID); err != nil {
			c.JSON(http.StatusInternalServerError, gin.H{"error": err.Error()})
			return
		}
		// –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º 204 No Content
		c.Status(http.StatusNoContent)
	})

	// 2) –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: GET /api/devices/favorite
	r.GET("/devices/favorite", func(c *gin.Context) {
		userID, ok := middleware.GetUserID(c)
		if !ok {
			c.JSON(http.StatusUnauthorized, gin.H{"error": "user not authenticated"})
			return
		}

		log.Printf("üîé GetFavorites called by user=%s", userID)
		devices, err := favRepo.GetFavorites(c.Request.Context(), userID)
		if err != nil {
			c.JSON(http.StatusInternalServerError, gin.H{"error": err.Error()})
			return
		}
		c.JSON(http.StatusOK, devices)
	})

	// 3) –£–¥–∞–ª–∏—Ç—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ: DELETE /api/devices/:id/favorite
	r.DELETE("/devices/:id/favorite", func(c *gin.Context) {
		userID, _ := middleware.GetUserID(c) // –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω –≤–∞–ª–∏–¥–µ–Ω, userID –±—É–¥–µ—Ç –Ω–µ–Ω—É–ª–µ–≤—ã–º
		deviceID := c.Param("id")

		if err := favRepo.RemoveFavorite(c.Request.Context(), userID, deviceID); err != nil {
			// –ï—Å–ª–∏ –æ—à–∏–±–∫–∏ ‚Äúnot found‚Äù ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º 404, –∏–Ω–∞—á–µ 500
			if err.Error() == "not found" {
				c.JSON(http.StatusNotFound, gin.H{"error": "Favorite not found"})
			} else {
				c.JSON(http.StatusInternalServerError, gin.H{"error": err.Error()})
			}
			return
		}
		c.Status(http.StatusNoContent)
	})
}
